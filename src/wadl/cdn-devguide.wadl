<?xml version="1.0" encoding="UTF-8"?>
<!-- (C) 2012-2014 OpenStack Foundation, All Rights Reserved  -->

<!-- <!DOCTYPE application [<!ENTITY % common  SYSTEM "../wadl/common.ent">
    %common;]> -->
    
<application xmlns="http://wadl.dev.java.net/2009/02"
	xmlns:wadl="http://wadl.dev.java.net/2009/02"
	xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
	xmlns:raxapi="http://docs.rackspace.com/volume/api/v1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:cdn="http://docs.openstack.org/database/api/v1.0"		
	xmlns:imageapi="http://docs.openstack.org/image/api/v2.0" 
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:csapi="http://docs.openstack.org/compute/api/v2" 
	xmlns:common="http://docs.openstack.org/common/api/v1.0">	
	

<!--*******************************************************-->
<!--             All resources                             -->
<!--*******************************************************-->
	<resources base="https://global.cdn.api.rackspacecloud.com/">
		<resource id="version" path="v1.0">
			<resource id="project_id" path="{project_id}">
				<param name="project_id" style="template" type="xsd:string"> 
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<para>The project ID for the user. If you do not set the 
						<code>X-Project-Id header</code> in the request, use <code>project_id</code> in the URI. 
						For example: <code>GET https://global.cdn.api.rackspacecloud.com/v1.0/{project_id}</code> 
					</para>
				</wadl:doc>
				</param>
					<resource id="trailSlash" path="">
						<method href="#getHomeDocument"/>
					</resource>
				
			
			<resource id="ping" path="ping"> 	
			    <method href="#getPing"/> 
			</resource>
			   	
			<resource id="services" path="services">
				<method href="#getAllServices"/>
				<method href="#createService"/>
		
<!--				<resource id="service_name" path="{service_name}">
					<param name="service_name" style="template"
						type="xsd:string" required="true">
						<wadl:doc
							xmlns="http://docbook.org/ns/docbook"
							xml:lang="EN"><para>Specifies the name of the service that represents their distributed content. For example: mywebsite.com 
								</para> </wadl:doc>
					</param> -->
				   <resource id="service_id" path="{service_id}">
					<param name="service_id" style="template"
						type="xsd:string" required="true">
						<wadl:doc
							xmlns="http://docbook.org/ns/docbook"
							xml:lang="EN"><para>Specifies the service ID that represents distributed content. The value is a UUID, such as 96737ae3-cfc1-4c72-be88-5d0e7cc9a3f0, that is generated by the server. 
							</para> </wadl:doc>
					</param>
					<method href="#getService"/>
					<method href="#patchService"/>
					<method href="#deleteService"/>
					    <resource id="assets" path="assets">
					        <method href="#getCachedAsset"/>
					    	<method href="#deleteCachedAsset"/>
					    </resource>
					    <resource id="analytics" path="analytics">
						    <method href="#getAssetAnalytics"/>
					    </resource>	
				</resource>
			</resource>
				
			<resource id="flavors" path="flavors">
				<method href="#getFlavors"/>
				<resource id="flavor_id" path="{flavor_id}">
					<param name="flavor_id" style="template"
						type="xsd:string" required="true">
						<wadl:doc
							xmlns="http://docbook.org/ns/docbook"
							xml:lang="EN"><para>Specifies the flavor ID. For example: cdn 
							</para> </wadl:doc>
					</param>
					<method href="#getFlavorDetails"/>
			    </resource>
			</resource>
<!--				
				<resource id="ssl_certificate" path="ssl_certificate">
					<method href="#postSSLCertificate"/>
					     <resource id="domain_name" path="{domain_name}">
					          <param name="domain_name" style="template" type="xsd:string" required="true">
						          <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
						              <para>Specifies a string representing the type of the SSL certificate, such as <code>www.example.com</code>. </para> 
							      </wadl:doc>
					          </param>
					              <method href="#getSSLCertificate"/>
					      </resource>
				</resource> -->
							
			</resource>
		</resource>
	</resources>
<!--*******************************************************-->
<!--               All methods                             -->
<!--*******************************************************-->
<!--*******************************************************-->
<!--              Base methods                             -->
<!--*******************************************************-->	
<!--*******************************************************-->
<!--               Get home document                       -->
<!--*******************************************************-->
	<method name="GET" id="getHomeDocument">
		<wadl:doc xml:lang="EN" title="Retrieve the home document"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Retrieves the home document.</para>
			
			<para>The entire API is discoverable from a single
				starting point, the home document. To explore the
				entire API, you need to know only this one URI. </para>
			
			<para>The home document schema is currently not ratified in OpenStack and might change. For more information about home documents, see <link
					xlink:href="http://tools.ietf.org/html/draft-nottingham-json-home-03"
				>Home Documents for HTTP APIs</link> on the IEFT website.</para>			
		</wadl:doc>
		<request>
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-getHomeDocument_request-json-http.txt"/>
				</doc>
			</representation>
		</request>
		<response status="200" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-getHomeDocument_response-json-http.txt"
					/>
					<xsdxt:code
						href="../wadl/samples/cdn-getHomeDocument_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
	</method>

<!--*******************************************************-->
<!--               Get ping                                -->
<!--*******************************************************-->
	<method name="GET" id="getPing">
		<wadl:doc xml:lang="EN" title="Ping the server"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Pings the server.</para>
			<para>This operation retrieves a ping to the server. </para>
			
		</wadl:doc>
		<request>
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-getPing_request-json-http.txt"/>
				</doc>
			</representation>
		</request>
		<response status="204" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="No Content" xml:lang="EN">The server successfully processed the request, but is not returning any content.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-getPing_response-json-http.txt"
					/>
					<!--<xsdxt:code
						href="../wadl/samples/cdn-getPing_response.json"
					/> -->
				</wadl:doc>
			</representation>
		</response>
		<response status="500" xmlns="http://wadl.dev.java.net/2009/02">
			
			<doc title="Internal Server Error" xml:lang="EN">The implementation of ping may return a 500 response in cases where the API service is unable to communicate with one or more implementation nodes for the service. Errors in the transport layer between the client and the API node may produce other errors.</doc>			
			
		</response>
		<response status="503" xmlns="http://wadl.dev.java.net/2009/02">

			<doc title="Service Unavailable" xml:lang="EN">The implementation of ping may return a 503 response in cases where the API service is unable to communicate with one or more implementation nodes for the service. Errors in the transport layer between the client and the API node may produce other errors.</doc>			
			
		</response>
	</method>	
<!--*******************************************************-->
<!--              Services methods                         -->
<!--*******************************************************-->	
<!--*******************************************************-->
<!--               List all services                       -->
<!--*******************************************************-->
	<method name="GET" id="getAllServices">
		<wadl:doc xml:lang="EN" title="Retrieve all services"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Retrieves a list of all the services.</para>
			<para>This operation retrieves a list of all available services. </para>			
		</wadl:doc>
		<request>
			<param name="marker" style="query" type="xsd:string"
				required="false">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">Specifies the <code>service_id</code> that represents
				the last service listed.</wadl:doc>
			</param>
			<param name="limit" style="query" type="xsd:integer"
				required="false">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">Specifies the number of resources to list. The 
					maximum value that you can specify for <code>limit</code> is 20.
				</wadl:doc>
			</param>
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-getAllServices_request-json-http.txt"/>
				</doc>
			</representation>
		</request>
		<response status="200" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="OK" xml:lang="EN">Success or no services to return when there is an empty list of services.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-getAllServices_response-json-http.txt"
					/>
					<xsdxt:code
						href="../wadl/samples/cdn-getAllServices_response.json"
					/>
				</wadl:doc>
				<param name="id" style="plain" path="$.id">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the service ID that represents distributed content. The value is a UUID, such as 96737ae3-cfc1-4c72-be88-5d0e7cc9a3f0, that is generated by the server. </wadl:doc>
				</param>
				<param name="project_id" style="plain" path="$.project_id">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the unique identifier for the user. (This is your actual account ID that is returned as part of the authentication service response.)  </wadl:doc>
				</param>
				<param name="name" style="plain" path="$.name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of the service.</wadl:doc>
				</param>
				<param name="domains" style="plain" path="$.domains">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a list of domains used by users to access their website.</wadl:doc>
				</param>
				<param name="domain" style="plain" path="$.domains.domain">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the domain used to access the assets on their website, for which a CNAME is given to the CDN provider.</wadl:doc>
				</param>
				<param name="protocol" style="plain" path="$.domains.protocol">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the protocol used to access the assets on this domain. Only <code>http</code> or <code>https</code> are currently allowed. <code>protocol</code> defaults to <code>http</code>.</wadl:doc>
				</param>
				
				<param name="origins" style="plain" path="$.origins">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a list of origin domains or IP addresses where the original assets are stored.</wadl:doc>
				</param>
				<param name="origin" style="plain" path="$.origins.origin">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the URL or IP address to pull origin content from.</wadl:doc>
				</param>
				<param name="port" style="plain" path="$.origins.port">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the port used to access the origin. The default is port 80. Note: Rackspace CDN cannot be used with custom ports. Services are required to run on HTTP (80) and HTTPS (443) for the origin servers. </wadl:doc>
				</param>
				<param name="ssl" style="plain" path="$.origins.ssl">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Uses HTTPS to access the origin. The default is false.</wadl:doc>
				</param>
				<param name="rules" style="plain" path="$.origins.rules">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a collection of rules that define the conditions when this origin should be accessed. If there is more than one origin, the <code>rules</code> parameter is required.</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.origins.rules.name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this rule. </wadl:doc>
				</param>
				<param name="request_url" style="plain" path="$.origins.rules.request_url">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the request URL this rule should match for this origin to be used. Regex is supported. Note: The regex is a Perl Compatible Regex (PCRE). For more information about PRCE, see <link
							xlink:href="http://php.net/manual/en/book.pcre.php">Regular Expressions (Perl-Compatible)</link>. </wadl:doc>
				</param>
				
				<param name="caching" style="plain" path="$.caching">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the TTL rules for the assets under this service. Supports wildcards for fine grained control.</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.caching.name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this caching rule. Note: 'default' is a reserved name used for the default TTL setting.</wadl:doc>
				</param>
				<param name="ttl" style="plain" path="$.caching.ttl">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the TTL to apply.</wadl:doc>
				</param>
				<param name="rules" style="plain" path="$.caching.rules">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a collection of rules that determine if this TTL should be applied to an asset.</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.caching.rules.name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this rule.</wadl:doc>
				</param>
				<param name="request_url" style="plain" path="$.caching.rules.request_url">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the request URL this rule should match for this TTL to be used. Regex is supported. Note: The regex is a Perl Compatible Regex (PCRE). For more information about PRCE, see <link
							xlink:href="http://php.net/manual/en/book.pcre.php">Regular Expressions (Perl-Compatible)</link>.</wadl:doc>
				</param>
				
				<param name="restrictions" style="plain" path="$.restrictions">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the restrictions that define who can access assets (content from the CDN cache).</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.restrictions.name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this restriction.</wadl:doc>
				</param>
				<param name="rules" style="plain" path="$.restrictions.rules">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a collection of rules that determine if this TTL should be applied to an asset.</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.restrictions.rules.name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this rule.</wadl:doc>
				</param>
				<param name="referrer" style="plain" path="$.restrictions.rules.referrer">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the http host that requests must come from.</wadl:doc>
				</param>				
				
				<!--			<param name="request_url" style="plain" path="$.restrictions.rules.request_url">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the request URL this rule should match for this TTL to be used. Regex is supported. Note: The regex is a Perl Compatible Regex (PCRE). For more information about PRCE, see <link
							xlink:href="http://php.net/manual/en/book.pcre.php">Regular Expressions (Perl-Compatible)</link>.</wadl:doc>
				</param>
				<param name="http_host" style="plain" path="$.restrictions.rules.http_host">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the http host that requests must come from.</wadl:doc>
				</param>
				<param name="client_ip" style="plain" path="$.restrictions.rules.client_ip">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the client IP that requests can be accepted from.</wadl:doc>
				</param>
				<param name="http_method" style="plain" path="$.restrictions.rules.http_method">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the HTTP method (GET, PUT, POST, DELETE, PATCH, and so on) that can be accepted.</wadl:doc>
				</param>
-->				
				<param name="flavor_id" style="plain" path="$.flavor_id">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the CDN provider flavor ID to use. For a list of flavors, see the operation to list the available flavors.</wadl:doc>
				</param>
				
				<param name="status" style="plain" path="$.status">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the current status of the service.</wadl:doc>
				</param>
				<param name="create_in_progress" style="plain" path="$.status.create_in_progress">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies that the service is currently being created and deployed.</wadl:doc>
				</param>
				<param name="deployed" style="plain" path="$.status.deployed">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies that the service has been deployed and is ready to use.</wadl:doc>
				</param>
				<param name="update_in_progress" style="plain" path="$.status.update_in_progress">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies that the service is currently being updated.</wadl:doc>
				</param>
				<param name="delete_in_progress" style="plain" path="$.status.delete_in_progress">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies that the service is currently being deleted.</wadl:doc>
				</param>
				<param name="failed" style="plain" path="$.status.failed">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies that the previous operation on the service failed to create, deploy, update, or delete. Looks for the errors[] for details.</wadl:doc>
				</param>
				
				<param name="errors" style="plain" path="$.errors">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the list of errors that occurred during the previous service action.</wadl:doc>
				</param>
				<param name="message" style="plain" path="$.errors.message">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies an error message detailing why there is an error. </wadl:doc>
				</param>
				
				<param name="links" style="plain" path="$.links">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the self-navigating JSON document paths.</wadl:doc>
				</param>
				<param name="href" style="plain" path="$.links.href">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the location to access this resource. </wadl:doc>
				</param>
				<param name="rel" style="plain" path="$.links.rel">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies how the href link provided is related to this resource_url.</wadl:doc>
				</param>
			</representation>
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Invalid limit value (string, less than or equal to 0, 1000000000), or the limit value is greater than the maximum allowed (which defaults to 20).</doc>			
		</response>
	</method>
	<!--*******************************************************-->
	<!--               Create a service                        -->
	<!--*******************************************************-->
	<method name="POST" id="createService">
		<wadl:doc xml:lang="EN" title="Create a service"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Creates a service.</para>
		
            <para>To create a new service, provide a JSON body for the new service with the required attributes.</para>
			<para>For more information about rules ordering, caching rules, origin rules, and restrictions rules, see <link
				xlink:href="http://docs.rackspace.com/cdn/api/v1.0/cdn-devguide/content/createRules-d101.html">Creating rules</link>.</para>
			<para>For origin rules, use the path /* to include all content for the site.</para>
			<note><para><code>service_id</code>, which is used in several of the services operations, is returned in the response to create a service. Take note this value. You can also retrieve <code>service_id</code> using <link
				xlink:href="http://docs.rackspace.com/cdn/api/v1.0/cdn-devguide/content/GET_getService__services__service_id__servicesOperations.html">List a service</link>.</para> </note>			
		</wadl:doc>
		<request>			
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-createService_request-json-http.txt"/>
<!--					<xsdxt:code href="../wadl/samples/cdn-createService_request.json"/> -->
				<xsdxt:code href="../wadl/samples/cdn-createServiceWithHostheader_request.json"/>
				</doc>
				<param name="name" style="plain" path="$.name"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of the service. The minimum length for <code>name</code> is 3. The maximum length is 256.</wadl:doc>
				</param>
				<param name="domains" style="plain" path="$.domains"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a list of domains used by users to access their website.</wadl:doc>
				</param>
				<param name="domain" style="plain" path="$.domains.domain"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the domain used to access the assets on your website, for which you use a CNAME to the CDN provider. The minimum length for domain is 3. The maximum length is 253.</wadl:doc>
				</param>
				<param name="protocol" style="plain" path="$.domains.protocol"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the protocol used to access the assets on this domain. Only <code>http</code> or <code>https</code> are allowed. The default <code>protocol</code> is <code>http</code>. </wadl:doc>
				</param>
				
				<param name="certificate" style="plain" path="$.domains.certificate"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the type of security certificate. For the <code>certificate</code> parameter to apply, the <code>protocol</code> parameter must be set to <code>https</code>. Use <code>shared</code>, <code>san</code>, or <code>custom</code>.
						For all 3 types of security certificates, make sure that your origin (or origins) are SSL-enabled. Your SSL certificate needs to come from a trusted certificate authority (CA). For more information about security certificates and Rackspace CDN, see <link
							xlink:href="https://www.rackspace.com/knowledge_center/article/rackspace-cdn-secure-delivery-options">Rackspace CDN secure delivery options</link>. </wadl:doc>
				</param>
							<param name="shared" style="plain" path="$.domains.certificate.shared"
								required="false">
								<wadl:doc xmlns="http://docbook.org/ns/docbook"
									xml:lang="EN">Uses a shared https operator domain. The <code>domain</code> parameter must be a single word that is not dot separated.</wadl:doc>
							</param>
<!--							<param name="san" style="plain" path="$.domains.certificate.san"
								required="false">
								<wadl:doc xmlns="http://docbook.org/ns/docbook"
									xml:lang="EN">Adds the domain to the operator's SAN certificate as an alternate name. Note that a SAN certificate can take up to a few hours for a service to set up.</wadl:doc>
							</param>
							<param name="custom" style="plain" path="$.domains.certificate.custom"
								required="false">
								<wadl:doc xmlns="http://docbook.org/ns/docbook"
									xml:lang="EN">Generates a custom certificate (dedicated) for the domain to be used at the edge. To expedite the certificate provision, a custom (single) certificate requires that you have legitimate Whois information on your domain (or domains). Note that a customer certificate could take a couple days for the service to set up. </wadl:doc>
							</param>
-->							
							
				
				<param name="origins" style="plain" path="$.origins"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a list of origin domains or IP addresses where the original assets are stored.</wadl:doc>
				</param>
				<param name="origin" style="plain" path="$.origins.origin"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the URL or IP address from which to pull origin content. The minimum length for <code>origin</code> is 3. The maximum length is 253. </wadl:doc>
				</param>
				<param name="port" style="plain" path="$.origins.port"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the port used to access the origin. The default is port 80. Note: Rackspace CDN cannot be used with custom ports. Services are required to run on HTTP (80) and HTTPS (443) for the origin servers. All origins in the origin specification must define the port so that it that corresponds to the domain's protocol. If the domain's protocol is http, the port should be 80; if the domain's protocol is https, the port should be 443.</wadl:doc>
				</param>
				<param name="ssl" style="plain" path="$.origins.ssl"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Uses HTTPS to access the origin. The default is false.</wadl:doc>
				</param>
				<param name="rules" style="plain" path="$.origins.rules"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a collection of rules that define the conditions when this origin should be accessed. If there is more than one origin, the <code>rules</code> parameter is required.</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.origins.rules.name"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this rule. The minimum length for <code>name</code> is 1. The maximum length is 256.</wadl:doc>
				</param>
				<param name="request_url" style="plain" path="$.origins.rules.request_url"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the request URL that this rule should match for this origin to be used. The minimum length for <code>request_url</code> is 1. The maximum length is 1024. Regex is supported. Note: Use a Perl Compatible Regex (PCRE). For more information about PRCE, see <link
							xlink:href="http://php.net/manual/en/book.pcre.php">Regular Expressions (Perl-Compatible)</link>.</wadl:doc>
				</param>
				<param name="hostheadertype" style="plain" path="$.origins.hostheadertype"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the type for the host header. The default value is <code>domain</code>. Other valid values are <code>origin</code> and <code>custom</code>.</wadl:doc>
				</param>
				<param name="hostheadervalue" style="plain" path="$.origins.hostheadervalue"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the value to be contained in the host header. The default value is <code>NULL</code>; this value is assigned only when <code>hostheadertype</code> is <code>domain</code>. You are required to specify <code>hostheadervalue</code> only when <code>hostheadertype</code> is specified as <code>custom</code>. If you specify <code>hostheadertype</code> as <code>origin</code>, <code>hostheadervalue</code> takes the value of the origin domain.</wadl:doc>
				</param> 
				
				<param name="caching" style="plain" path="$.caching"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the TTL rules for the assets under this service. Supports wildcards for fine-grained control.</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.caching.name"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this caching rule. The minimum length for <code>name</code> is 1. The maximum length is 256. Note: <code>default</code> is a reserved name used for the default TTL setting.</wadl:doc>
				</param>
				<param name="ttl" style="plain" path="$.caching.ttl"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the TTL to apply. The value of <code>ttl</code> must be greater than or equal to 0. The maximum value that you can specify is 365 days.</wadl:doc>
				</param>
				<param name="rules" style="plain" path="$.caching.rules"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a collection of rules that determine if this TTL should be applied to an asset. Note: This is a required property if more than one entry is present for caching. </wadl:doc>
				</param>
				<param name="name" style="plain" path="$.caching.rules.name"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this rule. The minimum length for <code>name</code> is 1. The maximum length is 256. </wadl:doc>
				</param>
				<param name="request_url" style="plain" path="$.caching.rules.request_url"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the request URL that this rule should match for this TTL to be used. The minimum length for <code>request_url</code> is 1. The maximum length is 1024. Regex is supported. Note: Use a Perl Compatible Regex (PCRE). For more information about PRCE, see <link
							xlink:href="http://php.net/manual/en/book.pcre.php">Regular Expressions (Perl-Compatible)</link>.</wadl:doc>
				</param>
				
				<param name="restrictions" style="plain" path="$.restrictions"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the restrictions that define who can access assets (content from the CDN cache).</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.restrictions.name"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this restriction. The minimum length for <code>name</code> is 1. The maximum length is 256. </wadl:doc>
				</param>
				<param name="access" style="plain" path="$.restrictions.access"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the type of this restriction. Valid values are <code>whitelist</code>, which is the default value and allows access, or <code>blacklist</code>, which does not allow access. </wadl:doc>
				</param>
				<param name="rules" style="plain" path="$.restrictions.rules"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a collection of rules that determine if this restriction should be applied to an asset.</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.restrictions.rules.name"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this rule. The minimum length for <code>name</code> is 1. The maximum length is 256.</wadl:doc>
				</param>
				<param name="referrer" style="plain" path="$.restrictions.rules.referrer"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the HTTP host that requests must come from. The minimum length for <code>referrer</code> is 3. The maximum length is 1024.</wadl:doc>
				</param>								
 		    	<param name="request_url" style="plain" path="$.restrictions.rules.request_url"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the request URL to which the rule applies. The default value is <code>/*</code>, which indicates all content at the request URL.</wadl:doc>
				</param>
				<param name="geography" style="plain" path="$.restrictions.rules.geography"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the geography from which to restrict requests.</wadl:doc>
				</param>
				<param name="client_ip" style="plain" path="$.restrictions.rules.client_ip"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the client IP address to which the rule applies. Note: Rackspace CDN does not currently support Classless Inter-Domain Routing (CIDR) for these restrictions.</wadl:doc>
				</param>
				
<!--			<param name="http_host" style="plain" path="$.restrictions.rules.http_host"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the HTTP host from which requests must come. The minimum length for <code>http_host</code> is 3. The maximum length is 256.</wadl:doc>
				</param>
				<param name="client_ip" style="plain" path="$.restrictions.rules.client_ip"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the client IP address from which requests can be accepted.</wadl:doc>
				</param>
				<param name="http_method" style="plain" path="$.restrictions.rules.http_method"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the HTTP method (GET, PUT, POST, DELETE, PATCH, and so on) that can be accepted.</wadl:doc>
				</param>
-->	
				
				<param name="log_delivery" style="plain" path="$.log_delivery" required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN"><para>Specifies whether to enable log delivery to a Cloud Files container. You can use access log delivery to analyze the number of requests 
							for each object, the client IP address, and time-based usage patterns (such as monthly or seasonal usage).
						</para>
					</wadl:doc>
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN"> <para>  </para>        
					</wadl:doc>
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN"><para>Log files are named according to the following pattern: service name, log date, log hour, and MD5 hash. For example: 
							<code>www.mywebsite.com/2015/02/01/16/096e6c4473f235db081deb51f42a8d98.log.gz</code>. In this example, <code>www.mywebsite.com</code> is the name of the service, 
							<code>2015/02/01</code> is the date (February 1, 2015), and <code>16</code> is the hour that the log file was created. There might be multiple files for a given 
							hour because the system splits log files based on both time and log file size. 
							</para>
						</wadl:doc>
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN"> <para>  </para>        
					</wadl:doc>
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN"><para> All times in the access logs are UTC time. Within the gzip logs, the format of the entries is similar to National Center 
							for Supercomputing Applications (NCSA) combined log format, but without cookies. The pattern follows. The dashes (-) denote fields that 
							the NCSA combined log format dictates be present but that Rackspace CDN does not capture. </para>
					</wadl:doc>
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN"> <para>  </para>        
					</wadl:doc>
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN"><para> For example: <code>client_ip - - [day/month/year:hour:minute:second timezone] “method request HTTP_version” return_code bytes_sent “referrer” “user_agent”</code></para>
					</wadl:doc>
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN"> <para>  </para>        
					</wadl:doc>
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN"><para>Logs are stored in a Cloud Files container named .CDN_ACCESS_LOGS. If this container does not exist, it is created.</para>
					</wadl:doc>
				</param>
				<param name="enabled" style="plain" path="$.log_delivery.enabled" required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies whether to enable or disable log delivery. Valid values are <code>true</code> and <code>false</code>. </wadl:doc>
				</param>
				
				<param name="flavor_id" style="plain" path="$.flavor_id"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the CDN provider flavor ID to use. For a list of flavors, see the operation to list the available flavors. The minimum length for <code>flavor_id</code> is 3. The maximum length is 256.</wadl:doc>
				</param>
				
				
<!--								
				
				<param name="links" style="plain" path="$.links"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the self-navigating JSON document paths.</wadl:doc>
				</param>
				<param name="href" style="plain" path="$.links.href"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the location to access this resource.</wadl:doc>
				</param>
				<param name="rel" style="plain" path="$.links.rel"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies how the href link provided is related to this resource_url.</wadl:doc>
				</param>				
-->				
			</representation>
		</request>
		<response status="202" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Accepted" xml:lang="EN">The request has been accepted for processing.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code href="../wadl/samples/cdn-createService_response-json-http.txt"/>			
				</wadl:doc>
			</representation>
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Invalid JSON.</doc>			
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Missing or empty domains list.</doc>			
		</response>
<!--		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Maximum length of domains list reached.</doc>			
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Invalid entry for the domain value (such as [{"domain": "invalid"}]. </doc>			
		</response> -->
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Missing or empty origins list. </doc>			
		</response>
<!--		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Maximum length of origins list reached.</doc>			
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Invalid entry for the origin value (such as [{"origin": "invalid"}]. </doc>			
		</response>  -->
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Non-Boolean value for origins:origin:ssl. </doc>			
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Value for origins:origin:port is something other than 80 or 443. </doc>			
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Restrictions list present with no name.</doc>			
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Attempt to create a service with a flavor_id that is not 'cdn'.</doc>			
		</response>
	</method>
<!--*******************************************************-->
<!--               Retrieve a service                      -->
<!--*******************************************************-->
	<method name="GET" id="getService">
		<wadl:doc xml:lang="EN" title="Retrieve a service"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Retrieves a service.</para>
			<para>This operation retrieves a service. </para>			
		</wadl:doc>
		<request>
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-getService_request-json-http.txt"/>
				</doc>
			</representation>
		</request>
						
		<response status="200" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-getService_response-json-http.txt"
					/>
					<xsdxt:code
						href="../wadl/samples/cdn-getService_response.json"
					/>
				</wadl:doc>
				<param name="id" style="plain" path="$.id">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the service ID that represents distributed content. The value is a UUID, such as 96737ae3-cfc1-4c72-be88-5d0e7cc9a3f0, that is generated by the server. </wadl:doc>
				</param>
				<param name="project_id" style="plain" path="$.project_id">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the unique identifier for the user. (This is your actual account ID that is returned as part of the authentication service response.)  </wadl:doc>
				</param>
				<param name="name" style="plain" path="$.name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of the service.</wadl:doc>
				</param>
				<param name="domains" style="plain" path="$.domains">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a list of domains used by users to access their website.</wadl:doc>
				</param>
				<param name="domain" style="plain" path="$.domains.domain">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the domain used to access the assets on their website, for which a CNAME is given to the CDN provider.</wadl:doc>
				</param>
				<param name="protocol" style="plain" path="$.domains.protocol">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the protocol used to access the assets on this domain. Only <code>http</code> or <code>https</code> are currently allowed. <code>protocol</code> defaults to <code>http</code>.</wadl:doc>
				</param>
				
				<param name="origins" style="plain" path="$.origins">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a list of origin domains or IP addresses where the original assets are stored.</wadl:doc>
				</param>
				<param name="origin" style="plain" path="$.origins.origin">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the URL or IP address from which to pull origin content.</wadl:doc>
				</param>
				<param name="port" style="plain" path="$.origins.port">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the port used to access the origin. The default is port 80. Note: Rackspace CDN cannot be used with custom ports. Services are required to run on HTTP (80) and HTTPS (443) for the origin servers.</wadl:doc>
				</param>
				<param name="ssl" style="plain" path="$.origins.ssl">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Uses HTTPS to access the origin. The default is false.</wadl:doc>
				</param>
				<param name="rules" style="plain" path="$.origins.rules">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a collection of rules that define the conditions when this origin should be accessed. If there is more than one origin, the <code>rules</code> parameter is required.</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.origins.rules.name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this rule. </wadl:doc>
				</param>
				<param name="request_url" style="plain" path="$.origins.rules.request_url">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the request URL that this rule should match for this origin to be used. Regex is supported. Note: The regex is a Perl Compatible Regex (PCRE). For more information about PRCE, see <link
							xlink:href="http://php.net/manual/en/book.pcre.php">Regular Expressions (Perl-Compatible)</link>.</wadl:doc>
				</param>
				
				<param name="caching" style="plain" path="$.caching">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the TTL rules for the assets under this service. Supports wildcards for fine-grained control.</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.caching.name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this caching rule. Note: 'default' is a reserved name used for the default TTL setting.</wadl:doc>
				</param>
				<param name="ttl" style="plain" path="$.caching.ttl">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the TTL to apply.</wadl:doc>
				</param>
				<param name="rules" style="plain" path="$.caching.rules">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a collection of rules that determine if this TTL should be applied to an asset.</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.caching.rules.name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this rule.</wadl:doc>
				</param>
				<param name="request_url" style="plain" path="$.caching.rules.request_url">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the request URL that this rule should match for this TTL to be used. Regex is supported. Note: The regex is a Perl Compatible Regex (PCRE). For more information about PRCE, see <link
							xlink:href="http://php.net/manual/en/book.pcre.php">Regular Expressions (Perl-Compatible)</link>.</wadl:doc>
				</param>
				
				<param name="restrictions" style="plain" path="$.restrictions">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the restrictions that define who can access assets (content from the CDN cache).</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.restrictions.name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this restriction.</wadl:doc>
				</param>
				<param name="rules" style="plain" path="$.restrictions.rules">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a collection of rules that determine if this restriction should be applied to an asset.</wadl:doc>
				</param>
				<param name="name" style="plain" path="$.restrictions.rules.name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of this rule.</wadl:doc>
				</param>
				<param name="referrer" style="plain" path="$.restrictions.rules.referrer">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the HTTP host from which requests must come.</wadl:doc>
				</param>				
				
				<!--			<param name="request_url" style="plain" path="$.restrictions.rules.request_url">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the request URL that this rule should match for this TTL to be used. Regex is supported. Note: The regex is a Perl Compatible Regex (PCRE). For more information about PRCE, see <link
							xlink:href="http://php.net/manual/en/book.pcre.php">Regular Expressions (Perl-Compatible)</link>.</wadl:doc>
				</param>
				<param name="http_host" style="plain" path="$.restrictions.rules.http_host">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the HTTP host from which requests must come.</wadl:doc>
				</param>
				<param name="client_ip" style="plain" path="$.restrictions.rules.client_ip">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the client IP address from which requests can be accepted.</wadl:doc>
				</param>
				<param name="http_method" style="plain" path="$.restrictions.rules.http_method">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the HTTP method (GET, PUT, POST, DELETE, PATCH, and so on) that can be accepted.</wadl:doc>
				</param>
-->	
				<param name="log_delivery" style="plain" path="$.log_delivery">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies whether log delivery to a Cloud Files container is enabled or disabled. For more information about logs, see the <code>log_delivery</code> parameter description in <link
							xlink:href="http://docs.rackspace.com/cdn/api/v1.0/cdn-devguide/content/POST_createService_v1.0__project_id__services_servicesOperations.html">Create service</link>.</wadl:doc>
				</param>
				<param name="enabled" style="plain" path="$.log_delivery.enabled">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies whether log delivery is enabled (<code>true</code>) or disabled (<code>false</code>). </wadl:doc>
				</param>
				
				<param name="flavor_id" style="plain" path="$.flavor_id">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the CDN provider flavor ID to use. For a list of flavors, see the operation to list the available flavors.</wadl:doc>
				</param>
				
				<param name="status" style="plain" path="$.status">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the current status of the service.</wadl:doc>
				</param>
				<param name="create_in_progress" style="plain" path="$.status.create_in_progress">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies that the service is currently being created and deployed.</wadl:doc>
				</param>
				<param name="deployed" style="plain" path="$.status.deployed">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies that the service has been deployed and is ready to use.</wadl:doc>
				</param>
				<param name="update_in_progress" style="plain" path="$.status.update_in_progress">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies that the service is currently being updated.</wadl:doc>
				</param>
				<param name="delete_in_progress" style="plain" path="$.status.delete_in_progress">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies that the service is currently being deleted.</wadl:doc>
				</param>
				<param name="failed" style="plain" path="$.status.failed">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies that the previous operation on the service failed to create, deploy, update, or delete. Looks for the errors[] for details.</wadl:doc>
				</param>
				
				<param name="errors" style="plain" path="$.errors">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the list of errors that occurred during the previous service action.</wadl:doc>
				</param>
				<param name="message" style="plain" path="$.errors.message">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies an error message detailing why there is an error. </wadl:doc>
				</param>
				
				<param name="links" style="plain" path="$.links">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the self-navigating JSON document paths.</wadl:doc>
				</param>
				<param name="href" style="plain" path="$.links.href">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the location to access this resource. </wadl:doc>
				</param>
				<param name="rel" style="plain" path="$.links.rel">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies how the href link provided is related to this resource_url.</wadl:doc>
				</param>
			</representation>
		</response>
	</method>
<!--*******************************************************-->
<!--                   Edit a service                      -->
<!--*******************************************************-->
	<method name="PATCH" id="patchService">
		<wadl:doc xml:lang="EN" title="Update a service"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Updates the specified service.</para>
			<para>You can use the HTTP PATCH method to <code>add</code>, <code>remove</code>, or <code>replace</code> service properties. For more information about the HTTP PATCH method, see <link
				xlink:href="https://tools.ietf.org/html/rfc5789">RFC5789</link>.</para>
			<para>To update a service, send a JSON body that conforms to <link
				xlink:href="https://tools.ietf.org/html/rfc6902">RFC6902</link> using paths and values for one or more of the service parameters, which are described in <link
					xlink:href="http://docs.rackspace.com/cdn/api/v1.0/cdn-devguide/content/GET_getService__services__service_id__servicesOperations.html">Create a service</link>. If no changes are specified for a parameter in the JSON body, all parameter values from the previous version of the service are carried over by default.</para>							
		</wadl:doc>
		<request>
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-patchService_request-json-http.txt"/>
					<xsdxt:code
						href="../wadl/samples/cdn-patchService_request.json"
					/>
				</doc>
				<param name="op" style="plain" path="$.op" required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the operation, <code>add</code>, <code>remove</code>, or <code>replace</code>, to be executed. </wadl:doc>
				</param>
				<param name="path" style="plain" path="$.path"
					required="true">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the JSON Pointer location within the service's JSON representation of the service parameter being added, replaced or removed. </wadl:doc>
				</param>
				<param name="value" style="plain" path="$.value"
					required="false">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the actual value to be added or replaced. It is not required for the <code>remove</code> operation.</wadl:doc>
				</param>				
			</representation>
		</request>
		<response status="202" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Accepted" xml:lang="EN">The request has been accepted for processing.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-patchService_response-json-http.txt"
					/>
				</wadl:doc>
			</representation>
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Invalid input JSON or service not deployed.</doc>			
		</response>
		<response status="404" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Not Found" xml:lang="EN">Service not found.</doc>			
		</response>
<!--	<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Missing or empty domains list.</doc>			
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Maximum length of domains list reached.</doc>			
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Invalid entry for domain value (such as [{"domain": "invalid"}]. </doc>			
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Missing or empty origins list. </doc>			
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Maximum length of origins list reached.</doc>			
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Invalid entry for origin value (such as [{"origin": "invalid"}]. </doc>			
		</response> 
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Non-Boolean value for origins:origin:ssl. </doc>			
		</response>
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Value for origins:origin:port is something other than 80 or 443. </doc>			
		</response>
		
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Restrictions list present with no name.</doc>			
		</response>		
		<response status="400" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Bad Request" xml:lang="EN">Attempt to update a service with a flavor_id that is not 'cdn'.</doc>			
		</response>
-->		
	</method>
	<!--*******************************************************-->
	<!--                   Delete a service                    -->
	<!--*******************************************************-->
	<method name="DELETE" id="deleteService">
		<wadl:doc xml:lang="EN" title="Delete a service"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Deletes the specified service.</para>
			<para>This operation deletes the specified service. </para>			
		</wadl:doc>
		<request>
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-deleteService_request-json-http.txt"/>
				</doc>
			</representation>
		</request>
		<response status="202" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Accepted" xml:lang="EN">The request has been fulfilled, but does not return a representation
				(that is, the response is empty).</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-deleteService_response-json-http.txt"
					/>
				</wadl:doc>
			</representation>
		</response>
	</method>
<!--*******************************************************-->
<!--              Service assets methods                   -->
<!--*******************************************************-->	
<!--*******************************************************-->
<!--               Check a cached asset                    -->
<!--*******************************************************-->
	<method name="GET" id="getCachedAsset">
		<wadl:doc xml:lang="EN" title="Retrieve a cached asset"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Retrieves a cached asset.</para>
			<para>This operation retrieves the version of the asset that has been cached at the edge, along with any custom rules for the asset.</para>
			<para>The examples contain the expanded URL template with values inherited from parameters (for example,  https://private-anon-afee1c004-cdn.apiary-mock.com/services/mywebsite/assets).</para>			
		</wadl:doc>
		<request>
			<param name="url" style="query" type="xsd:string"
				required="true">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">Specifies the <code>url</code> of the asset that is checked.</wadl:doc>
			</param>			
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-getCachedAsset_request-json-http.txt"/>
				</doc>
			</representation>
		</request>
		<response status="200" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-getCachedAsset_response-json-http.txt"
					/>
					<xsdxt:code
						href="../wadl/samples/cdn-getCachedAsset_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
	</method>
<!--*******************************************************-->
<!--               Purge a cached asset                    -->
<!--*******************************************************-->
	<method name="DELETE" id="deleteCachedAsset">
		<wadl:doc xml:lang="EN" title="Purge a cached asset"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Purges a cached asset.</para>
			<para>This operation purges the current version of the asset that has been cached at the edge node. Currently in Rackspace CDN, purges require the URL of the file to purge. Use of wildcards is not in effect.</para>
			<note><para>By default, the <code>hard</code> query parameter is set to <code>true</code> to purge the assets. You can set <code>hard</code> to <code>false</code> to invalidate the cache, which might be faster than purging. </para></note>
        <para>Akamai's SLA for cache invalidation, which is the time when the policy change takes effect until the actual invalidation, is approximately 60 seconds. For Rackspace CDN, 
            additional time must be added to that SLA to account for the time taken to deploy the service.</para> 			
		</wadl:doc>
		<request>
			<param name="url" style="query" type="xsd:string"
				required="false">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">Specifies the relative <code>URL</code> of the asset to be purged.</wadl:doc>
			</param>
			<param name="hard" style="query" type="xsd:boolean"
				required="false">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">Specifies a purge when set to <code>true</code> or a cache invalidation when set to <code>false</code>. The default is <code>true</code>.</wadl:doc>		
			</param>
			
<!--			5/4/2015 Hiding this parameter as requested by Amit.
				<param name="all" style="query" type="xsd:string"
				required="false">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">If <code>all</code> is set to <code>true</code>, specifies that the purge occurs against all of the assets for the service.</wadl:doc>
			</param> 
-->
			
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-deleteCachedAsset_request-json-http.txt"/>
				</doc>
			</representation>
		</request>
		<response status="202" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Accepted" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-deleteCachedAsset_response-json-http.txt"
					/>					
				</wadl:doc>
			</representation>
		</response>
	</method>
<!--*******************************************************-->
<!--              Service Analytic methods                 -->
<!--*******************************************************-->	
<!--*******************************************************-->
<!--               Check a cached asset                    -->
<!--*******************************************************-->
	<method name="GET" id="getAssetAnalytics">
		<wadl:doc xml:lang="EN" title="Retrieve asset analytics"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Retrieves asset analytics.</para>
			<para>This operation retrieves usage data (such as hits or misses) about the service.</para>			
			<para>The examples contain the expanded URL template with values inherited from parameters (for example,  https://private-anon-afee1c004-cloudcdn.apiary-mock.com/services/mywebsite/analytics).</para>
		</wadl:doc>
		<request>
			<param name="url" style="query" type="xsd:string"
				required="false">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">Specifies the <code>url</code> of the asset on which to get analytics. If left blank, analytics are reported against all the assets of the service.</wadl:doc>
			</param>			
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-getAssetAnalytics_request-json-http.txt"/>
				</doc>
			</representation>
		</request>
		<response status="200" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-getAssetAnalytics_response-json-http.txt"
					/>
					<xsdxt:code
						href="../wadl/samples/cdn-getAssetAnalytics_response.json"
					/>
				</wadl:doc>
			</representation>
		</response>
	</method>

    <!--*******************************************************-->
	<!--              SSL certificate method                   -->
	<!--*******************************************************-->	
	<!--*******************************************************-->
	<!--               Post SSL certificate                    -->
	<!--*******************************************************-->
	<!--	<method name="POST" id="postSSLCertificate">
		<wadl:doc xml:lang="EN" title="Create an SSL certificate"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Creates an SSL certificate.</para>
			<para>This operation creates an SSL certificate. </para>						
		</wadl:doc>
		<request>			
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-createSSLCertificate_request-json-http.txt"/>
					<xsdxt:code href="../wadl/samples/cdn-createSSLCerticate_request.json"/>
				
				</doc>
				<param name="cert_type" style="plain" required="true" path="$.cert_type">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a string representing the type of the SSL certificate.</wadl:doc>
				</param>
				<param name="domain_name" style="plain" required="true" path="$.domain_name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a string representing the type of the SSL certificate, such as <code>www.example.com</code>.</wadl:doc>
				</param>
				<param name="flavor_id" style="plain" required="true" path="$.flavor_id">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the CDN-provider flavor id to use. See <link
							xlink:href="http://docs.rackspace.com/cdn/api/v1.0/cdn-devguide/content/flavorsOperations.html">Flavors</link>.</wadl:doc>
				</param>				
			</representation>
		</request>
		<response status="202" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="Accepted" xml:lang="EN">The request has been accepted for processing.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-createSSLCertificate_response-json-http.txt"
					/>
				</wadl:doc>
				
			</representation>
		</response>
	</method>	-->
	
	<!--*******************************************************-->
	<!--               Get SSL certificate                     -->
	<!--*******************************************************-->
<!--	<method name="GET" id="getSSLCertificate">
		<wadl:doc xml:lang="EN" title="Retrieves an SSL certificate"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Retrieves an SSL certificate.</para>
			<para>This operation retrieves an SSL certificate. </para>						
		</wadl:doc>
		<request>			
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-getSSLCertificate_request-json-http.txt"/>					
				</doc>				
			</representation>
		</request>
		<response status="200" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-getSSLCertificate_response-json-http.txt"
						href="../wadl/samples/cdn-getSSLCertificate_response.json"
					/>
				<param name="flavor_id" style="plain" path="$.flavor_id">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the CDN-provider flavor id USED. See <link
							xlink:href="http://docs.rackspace.com/cdn/api/v1.0/cdn-devguide/content/flavorsOperations.html">Flavors</link>.</wadl:doc>
				</param>
				<param name="domain_name" style="plain" path="$.domain_name">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a string that represents the type of the SSL certificate, such as <code>www.example.com</code>.</wadl:doc>
				</param>
				<param name="cert_type" style="plain" path="$.cert_type">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a string representing the type of the SSL certificate.</wadl:doc>
				</param>				
				<param name="cert_details" style="plain" path="$.cert_details">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Provides information about the certificate.</wadl:doc>
				</param>
				<param name="provider" style="plain" path="$.cert_details.provider">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the provider of the certificate.</wadl:doc>
				</param>
				<param name="cert_domain" style="plain" path="$.cert_details.provider.cert_domain">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the certificate domain.</wadl:doc>
				</param>
				<param name="extra_info" style="plain" path="$.cert_details.provider.cert_domain.extra_info">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Provides additional information about the certificate.</wadl:doc>
				</param>
				<param name="status" style="plain" path="$.cert_details.provider.cert_domain.extra_info.status">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Provides the status the certificate.</wadl:doc>
				</param>
				<param name="san_cert" style="plain" path="$.cert_details.provider.cert_domain.extra_info.san_cert">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Provides SAN certification information.</wadl:doc>
				</param>
				<param name="action" style="plain" path="$.cert_details.provider.cert_domain.extra_info.action">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Provides information about any action for the certificate.</wadl:doc>
				</param>
				<param name="status" style="plain" path="$.status">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Provides status information for the certificate.</wadl:doc>
				</param>
				</wadl:doc>
				
			</representation>
		</response>
	</method>
-->
	
<!--*******************************************************-->
<!--              Flavors methods                          -->
<!--*******************************************************-->	
<!--*******************************************************-->
<!--               List flavors                             -->
<!--*******************************************************-->
	<method name="GET" id="getFlavors">
		<wadl:doc xml:lang="EN" title="Retrieve flavors"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Retrieves a list of all available flavors.</para>
			<para>This operation retrieves a list of all available flavors.</para>			
			
		</wadl:doc>
		<request>
						
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-getFlavors_request-json-http.txt"/>
				</doc>
			</representation>
		</request>
		<response status="200" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-getFlavors_response-json-http.txt"
					/>
					<xsdxt:code
						href="../wadl/samples/cdn-getFlavors_response.json"
					/>
				</wadl:doc>
				<param name="id" style="plain" path="$.id">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of the flavor. The name must not exceed 64 bytes in length and is limited to Unicode, digits, underscores, and hyphens.</wadl:doc>
				</param>
				<param name="providers" style="plain" path="$.providers">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the list of providers mapped to this flavor.</wadl:doc>
				</param>
				<param name="provider" style="plain" path="$.providers.provider">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of the provider. The name must not exceed 64 bytes in length and is limited to Unicode, digits, underscores, and hyphens.</wadl:doc>
				</param>
				<param name="links" style="plain" path="$.providers.links">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a list with an <code>href</code> where <code>rel</code> is <code>provider_url</code>. </wadl:doc>
				</param>
				
				<param name="links" style="plain" path="$.links">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the self-navigating JSON document paths.</wadl:doc>
				</param>
				<param name="href" style="plain" path="$.links.href">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the location to use to access the resource. </wadl:doc>
				</param>
				<param name="rel" style="plain" path="$.links.rel">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies how the <code>href</code> link provided is related to the resource_url.</wadl:doc>
				</param>
			</representation>
		</response>
	</method>

<!--*******************************************************-->
<!--               List flavor details                     -->
<!--*******************************************************-->	
	<method name="GET" id="getFlavorDetails">
		<wadl:doc xml:lang="EN" title="Retrieve flavor details"
			xmlns="http://docbook.org/ns/docbook">
			<para role="shortdesc">Retrieves details for the specified flavor.</para>
			<para>This operation retrieves details for the flavor specified by flavor_id.</para>			
			
		</wadl:doc>
		<request>
			
			<representation mediaType="application/json" >
				<doc>
					<xsdxt:code href="../wadl/samples/cdn-getFlavorDetails_request-json-http.txt"/>
				</doc>
			</representation>
		</request>
		<response status="200" xmlns="http://wadl.dev.java.net/2009/02">
			<doc title="OK" xml:lang="EN">Success.</doc>
			<representation mediaType="application/json">
				<wadl:doc xmlns="http://docbook.org/ns/docbook"
					xml:lang="EN">
					<xsdxt:code
						href="../wadl/samples/cdn-getFlavorDetails_response-json-http.txt"
					/>
					<xsdxt:code
						href="../wadl/samples/cdn-getFlavorDetails_response.json"
					/>
				</wadl:doc>
				<param name="id" style="plain" path="$.id">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of the flavor. The name must not exceed 64 bytes in length and is limited to Unicode, digits, underscores, and hyphens.</wadl:doc>
				</param>
				<param name="providers" style="plain" path="$.providers">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the list of providers mapped to this flavor class.</wadl:doc>
				</param>
				<param name="provider" style="plain" path="$.providers.provider">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the name of the provider. The name must not exceed 64 bytes in length and is limited to Unicode, digits, underscores, and hyphens.</wadl:doc>
				</param>
				<param name="links" style="plain" path="$.providers.links">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies a list with a <code>href</code> where <code>rel</code> is <code>provider_url</code>. </wadl:doc>
				</param>
				
				<param name="links" style="plain" path="$.links">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the self-navigating JSON document paths.</wadl:doc>
				</param>
				<param name="href" style="plain" path="$.links.href">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies the location to access this resource. </wadl:doc>
				</param>
				<param name="rel" style="plain" path="$.links.rel">
					<wadl:doc xmlns="http://docbook.org/ns/docbook"
						xml:lang="EN">Specifies how the href link provided is related to this resource_url.</wadl:doc>
				</param>
			</representation>
		</response>
	</method>

	
</application>



