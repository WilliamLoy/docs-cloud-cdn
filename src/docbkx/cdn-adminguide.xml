<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book [
        <!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash  "&#x2013;">
        <!ENTITY mdash  "&#x2014;">
        <!ENTITY hellip "&#x2026;">
        
        <!-- Useful for describing APIs -->
        <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">
        
        <!ENTITY CHECK  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Check_mark_23x20_02.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>
              
        <!ENTITY ARROW  '<inlinemediaobject xmlns="http://docbook.org/ns/docbook">
                 <imageobject>
                  <imagedata fileref="img/Arrow_east.svg"
                             format="SVG" scale="60"/>
                </imageobject>
              </inlinemediaobject>'>
]>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:svg="http://www.w3.org/2000/svg" version="5.0"
  xml:id="cdn-adminguide" status="">
  <?rax title.font.size="35px" subtitle.font.size="20px"?>
  <title>Rackspace CDN Developer Guide for Service Management</title>
  <?rax status.bar.text.font.size="40px"
     status.bar.text="Early Access"
      canonical.url.base="http://docs.rackspace.com/cdn/api/v1.0/cdn-adminguide/content"?>
  <titleabbrev>Rackspace CDN Developer Guide for Service Management</titleabbrev>
  <info>
    <copyright>
      <year>2015</year>
      <holder>Rackspace US, Inc.</holder>
    </copyright>
    <releaseinfo>API v1.0 Early Access</releaseinfo>
    <productname>Rackspace CDN</productname>
    <pubdate xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
      >2015-01-07</pubdate>
    <legalnotice role="rs-api" xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml">
      <annotation>
        <remark>Copyright details are filled in by the doc build process.</remark>
      </annotation>
    </legalnotice>
    <abstract xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml">
      <para>This document is intended for software developers interested in developing service
        management applications using the Rackspace CDN Application Programming Interface
          (<abbrev>API</abbrev>). </para>
    </abstract>
    <!--Note that the <productname> text matches the first few words of the title. The build system splits the title into productname + rest of title on the pdf cover.-->
    <revhistory>
      <revision>
        <date>2015-01-07</date>
        <revdescription>
          <para>Initial Early Access (EA) release.</para>
        </revdescription>
      </revision>
    </revhistory>
    <legalnotice role="rs-api">
      <annotation>
        <remark>Copyright details are filled in by the build system.</remark>
      </annotation>
    </legalnotice>
    <!-- 
       The values in raxm:metadata are used to control where the content appears on the landing page in docs.rackspace.com.
       Work with the Cloud Doc Tools team to find out what to put here. Once established, you should not change these
       values without first consulting with the CDT team.
    -->
    <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
      <raxm:displayname>API Admin Developer Guide</raxm:displayname>
      <raxm:product version="v1.0">cdn</raxm:product>
      <raxm:priority>30</raxm:priority>
    </raxm:metadata>
  </info>
  <chapter xml:id="Overview">
    <title>Overview</title>
    <!--You can use the <?dbhtml stop-chunking?> processing instruction to prevent a chapter or section for chunking further in the html output. -->
    <remark>From http://docs.cloudcdn.apiary.io/ All deleted per Megan's edits.</remark>
    <remark>From https://one.rackspace.com/display/atlanta/Rackspace+CDN+Engineering</remark>
    <para>A content delivery network (CDN) is designed to improve performance of publicly
      distributed assets.  Assets can be anything from website content, to web application
      components, to media like videos, ads, and interactive experiences.  CDNs decrease the load
      time of these assets by caching them on edge nodes, which are also called edge servers or
      points of presence (PoP) servers.  Edge nodes are distributed around the globe, and they cache
      content and serve it directly to customers, thus reducing transit time to a customer's
      location. </para>
    <para>Rackspace CDN gives you the power to accelerate content on any public resource at
      Rackspace. It provides a simple API (and soon Control Panel) experience for you to manage your
      CDN-enabled domains and the origins and assets associated with those domains.</para>
    <para>The Rackspace CDN architecture includes the following components:</para>
    <itemizedlist>
      <listitem>
        <para>A RESTful API</para>
      </listitem>
      <listitem>
        <para>The ability to cache publicly accessible resources hosted on a Cloud Server instance,
          or a public Cloud Files container</para>
      </listitem>
      <listitem>
        <para>A single global endpoint to access the API</para>
      </listitem>
      <listitem>
        <para>Use of the Akamai Technologies's content delivery network, which is one of the world's
          largest distributed computing platforms </para>
      </listitem>
    </itemizedlist>
    <para xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
      >Interactions with Rackspace CDN occur programmatically via the Rackspace CDN API as described
      in this <citetitle>Rackspace CDN Developer Guide for Service Management</citetitle> and in the
      following guides that are available on <link xlink:href="http://docs.rackspace.com/"
        >docs.rackspace.com</link>:<itemizedlist>
        <listitem>
          <para>
            <citetitle>Rackspace CDN Getting Started Guide</citetitle>
          </para>
        </listitem>
        <listitem>
          <para>
            <citetitle>Rackspace CDN Developer Guide</citetitle>
          </para>
        </listitem>
      </itemizedlist>
    </para>
    <section xml:id="Intended_Audience-d1e166">
      <title>Intended audience</title>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
        >The following APIs provide access to Rackspace CDN: </para>
      <itemizedlist spacing="compact" xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:html="http://www.w3.org/1999/xhtml">
        <listitem>
          <para>The <emphasis>management</emphasis> API, which is available only to developers,
            support personnel, and operations administrators within Rackspace, depending on the
            granted LDAP roles and permissions, is the subject of this document.</para>
        </listitem>
        <listitem>
          <para>The <emphasis>public</emphasis> API, which is available to developers within
            Rackspace and Rackspace customers, is the subject of a companion document, the
              <citetitle>Rackspace CDN Developer Guide</citetitle>.</para>
        </listitem>
      </itemizedlist>
      <para xmlns:wadl="http://wadl.dev.java.net/2009/02"
        xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml">These
        guides are intended to assist software developers who want to develop applications by using
        the Rackspace CDN API. They assume the reader has a general understanding of CDN concepts
        and is familiar with the following technology: </para>
      <itemizedlist>
        <listitem>
          <para>RESTful web services</para>
        </listitem>
        <listitem>
          <para>HTTP/1.1 conventions</para>
        </listitem>
        <listitem>
          <para>JSON data serialization formats</para>
        </listitem>
      </itemizedlist>
    </section>
    <section xml:id="Document_Change_History-d1e166">
      <title>Document change history</title>
      <para>This version of the developer guide for service management replaces and obsoletes all
        earlier versions. The most recent changes are described in the following table:</para>
      <?rax revhistory?>
    </section>
    <section xml:id="Additional_Resources-d1e532">
      <title>Additional resources</title>
      <para>You can download the most current versions of the external Rackspace API-related
        documents from <link xlink:href="http://docs.rackspace.com/"
        >docs.rackspace.com</link>.</para>
      <!--
      <para> For more details about Rackspace CDN, refer to ??? (link
        to www.rackspace.com/cloud/cdn???) . This site also offers
        links to the Rackspace official support channels, including
        knowledge base articles, forums, phone, chat, and
        email.</para>
        -->
      <para>During Early Access, email all support questions to: <link
          xlink:href="mailto:cdn@rackspacecloud.com">cdn@rackspace.com</link>. </para>
      <para>Please visit our <link xlink:href="http://feedback.rackspace.com">Product Feedback
          Forum</link> and let us know what you think about Rackspace CDN.</para>
      <para>This API uses standard HTTP 1.1 status codes as documented at: <link
          xlink:href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html">HTTP Status Code
          Definitions</link>. (Also see <xref linkend="responseCodes-d101e"/>).</para>
    </section>
    <section xml:id="API_Contract_Changes-d1e363">
      <title>API contract changes</title>
      <para xmlns:wadl="http://wadl.dev.java.net/2009/02"
        xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml">The
        API contract is not locked and may change during the Early Access program. </para>
      <para xmlns:wadl="http://wadl.dev.java.net/2009/02"
        xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
        >Rackspace will notify customers in Release Notes when and if the contract does
        change.</para>
    </section>
    <section xml:id="Pricing_SLA-d1e1362">
      <title>Pricing and service level</title>
      <para>During Early Access, there is no charge for Rackspace CDN. </para>
      <!--      <para>When Rackspace CDN moves to Unlimited Availability, customers will be billed for outbound
        bandwidth.</para> -->
      <para>While Rackspace CDN is in Early Access, it is subject to the Rackspace test terms at
          <link xlink:href="http://www.rackspace.com/information/legal/testterms">Legal Information
          - Test Terms</link>. When Rackspace CDN moves to Unlimited Availability, the service level
        agreement (SLA) will be available.</para>
    </section>
  </chapter>
  <chapter xml:id="concepts-d1eo1">
    <title>Concepts and terminology</title>
    <para>To use the Rackspace CDN API effectively, you should understand several key
      concepts:</para>
    <section xml:id="CDN-d1eo1">
      <title>Content delivery network</title>
      <para>A content delivery network (CDN) is a system of multiple computers that contains copies
        of data stored at various network nodes. A CDN is designed to improve performance of
        publicly distributed assets. Assets can be anything from website content, to web application
        components, to media such as videos, ads, and interactive experiences.  CDNs decrease the
        load time of these assets by caching them on edge nodes, also called edge servers or point
        of presence (PoPs) servers.  Edge nodes are distributed around the globe, so requests travel
        to a local location to get assets rather than to and from a data center based far from the
        end user. </para>
    </section>
    <section xml:id="pointOfPresence-d1eo1">
      <title>Point of presence</title>
      <para>A point of presence (PoP) is the point at which two or more different networks or
        communication devices build a connection with each other. PoP mainly refers to an access
        point, location, or facility that connects to and helps other devices establish a connection
        with the Internet. </para>
    </section>
    <section xml:id="edgeNode-d1eo1">
      <title>Edge node</title>
      <para>CDN providers have many points of presence (PoP) servers around the world. These servers
        are known as edge nodes. These edge nodes cache the content and serve it directly to
        customers, thus reducing transit time to a customer's location.</para>
    </section>
    <section xml:id="edgeServer-d1eo1">
      <title>Edge server</title>
      <para>An edge server is the same as an edge node. </para>
    </section>
    <section xml:id="domain-d1eo1">
      <title>Domain</title>
      <para>A domain represents the domain name through which visitors retrieve content. The
        underlying site might be served through a CDN. A service can have multiple domains. The CDN
        provider provides users with a Canonical Name (CName) to specify for their domain name as an
        alias.</para>
    </section>
    <section xml:id="Origin-d1eo1">
      <title>Origin</title>
      <para>An origin is an address (IP or domain) from which the CDN provider pulls content. A
        service can have multiple origins.</para>
    </section>
    <section xml:id="flavor-d1eo1">
      <title>Flavor</title>
      <para>A flavor is a mapping configuration to a CDN provider that enables you to decide which
        CDN features that you want your service to use. In the request and response examples for
        Rackspace CDN, the flavor is referred to with the <code>flavor_id</code> parameter. For this
        release of Rackspace CDN, the <code>flavor_id</code> value is <code>cdn</code>. The
          <code>cdn</code> flavor enables your service content to be delivered across the network
        using the Rackspace CDN partner, Akamai. In the future, Rackspace might offer other
        flavors.</para>
    </section>
    <section xml:id="service-d1eo1">
      <title>Service</title>
      <para>A service represents an application that has its content cached to the edge
        nodes.</para>
    </section>
    <section xml:id="status-d1eo1">
      <title>Status</title>
      <para>The status indicates the current state of a service. The time it takes for a service
        configuration to be distributed to a CDN provider cache can vary. </para>
    </section>
    <section xml:id="purge-d1eo1">
      <title>Purge</title>
      <para>Purging removes content from the edge nodes thus invalidating the content so that the
        content can be refreshed from your origin servers.</para>
    </section>
    <section xml:id="cachingRule-d1eo1">
      <title>Caching rule</title>
      <para>A caching rule provides you with fine-grained control over the time-to-live (TTL) of an
        object. When the TTL expires for an object, the edge node pulls the object from the origin
        again.</para>
    </section>
    <section xml:id="restriction-d1eo1">
      <title>Restriction</title>
      <para>A restriction enables you to define rules about who can or cannot access content from
        the cache. Examples of a restriction are allowing requests only from certain domains,
        geographies, or IP addresses.</para>
    </section>
  </chapter>
  <chapter xml:id="generalAPIInfo-d1eo1">
    <title>General API information</title>
    <para xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml">The
      Rackspace CDN API is implemented using a RESTful web service interface. Like other Rackspace
      services, Rackspace CDN shares a common token-based authentication system that allows seamless
      access between products and services.</para>
    <para xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml">You
      can access the functions of the public Rackspace CDN API on behalf of a customer. The
      Rackspace CDN API includes operations for managing features of the public API. </para>
    <note xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml">
      <para>All requests to authenticate against and operate the service are performed using SSL
        over HTTP (HTTPS) on TCP port 443.</para>
    </note>
    <section xml:id="Authentication-d1e639" xmlns:m="http://www.w3.org/the key 1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml">
      <title>Authentication</title>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"> Every REST request against the Rackspace
        CDN service requires the inclusion of a specific authorization token, supplied by the
          <code>X-Auth-Token</code> HTTP header. Customers obtain this token by using the Rackspace
        Cloud Identity service and supplying a valid username and API access key. </para>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02">To authenticate, you submit a
          <code>POST/v2.0/tokens</code> request, presenting valid Rackspace customer credentials in
        the message body to a Rackspace authentication endpoint. </para>
      <note xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02"><title>Notes</title>
        <itemizedlist>
          <listitem>
            <para>If you cannot access the Rackspace CDN API, send an email to the Rackspace CDN team at
              <email>cdn@rackspace.com</email> to request access. </para>
          </listitem>
          <listitem>
            <para>
              If you authenticate with username and password credentials, you can set up multi-factor authentication 
              to add an additional level of security to your account. This feature is not available for username and 
              API credentials. For information about setting up and 
              authenticating with multi-factor authentication, see 
              <link xlink:href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/MFA_Ops.html">Multifactor authentication</link> 
              in the <citetitle>Cloud Identity Client Developer Guide</citetitle>.
            </para>
          </listitem>
        </itemizedlist>
      </note>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02">
        <emphasis role="bold">1. GET YOUR CREDENTIALS</emphasis>
      </para>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02"> You can use either of the following sets of
        credentials: <itemizedlist>
          <listitem>
            <para>Your user name and password</para>
          </listitem>
          <listitem>
            <para>Your user name and API key</para>
          </listitem>
        </itemizedlist>
      </para>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02">Your user name and password are the ones that
        you use to log in to the Rackspace Cloud Control Panel. After you are logged in, you can use
        the Rackspace Cloud Control Panel to obtain your API key.</para>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02"> US and UK based accounts use the Cloud
        Control Panel at <link xlink:href="https://mycloud.rackspacecloud.com/"
          >https://mycloud.rackspace.com/</link>. </para>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02">
        <emphasis role="bold">2. CHOOSE YOUR AUTHENTICATION ENDPOINT</emphasis>
      </para>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02">Use the authentication endpoint for the region
        in which your account is based. All accounts authenticate through <link
          xlink:href="https://identity.api.rackspacecloud.com/v2.0/tokens"
          >https://identity.api.rackspacecloud.com/v2.0/tokens</link>.</para>
      <note xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02">
        <para>Users of the Rackspace CDN service management API documented in this guide (see
          endpoints at <xref linkend="serviceEndpoints"/>) need to use the internal Identity system
          at <link xlink:href="https://identity-internal.api.rackspacecloud.com:443/v2.0/"
            >https://identity-internal.api.rackspacecloud.com:443/v2.0/</link> for authentication
          tokens, as should anyone logging in using a Rackspace single sign-on (SSO).</para>
      </note>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02"> </para>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02">
        <emphasis role="bold">3. SEND YOUR CREDENTIALS TO YOUR AUTHENTICATION ENDPOINT</emphasis>
      </para>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02">If you know your credentials and your
        authentication endpoint, and you can issue a <code>POST /v2.0/tokens</code> request in an
        API call, you have all the basic information that you need to use the Rackspace Cloud
        Identity service. </para>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02"> You can use <link
          xlink:href="http://curl.haxx.se/">cURL</link> to perform the authentication process in two
        steps: get a token, and send the token to a service.<orderedlist>
          <listitem>
            <para>Get an authentication token by providing your user name and either your API key or
              your password. Following are examples of both approaches:</para>
            <example>
              <title>User name and API key</title>
              <literallayout class="monospaced">curl -X POST https://auth.api.rackspacecloud.com/v2.0/tokens -d 
'{ "auth":{ "RAX-KSKEY:apiKeyCredentials":{ "username":"yourUserName", "apiKey":"yourApiKey" } } }' -H "Content-type: application/json"</literallayout>
            </example>
            <example>
              <title>User name and password</title>
              <literallayout class="monospaced">curl -X POST https://auth.api.rackspacecloud.com/v2.0/tokens -d
'{"auth":{"passwordCredentials":{"username":"yourUserName","password":"yourPassword"}}}' -H "Content-type: application/json"</literallayout>
            </example>
          </listitem>
          <listitem>
            <para>Review the authentication response.
              <itemizedlist>
                <listitem>
                <para>Successful authentication returns a token that you can use as evidence that your
                  identity has already been authenticated along with a service catalog, which lists the
                  endpoints that you can use for Rackspace Cloud services. To use the token, pass it to
                  other services as an <code>X-Auth-Token</code> header.</para>
                </listitem>
                <listitem>
                  <para>If the Identity service returns a returns a 401 message with a request for
                    additional credentials, your account requires <link
                      xlink:href="http://docs-internal.rackspace.com/auth/api/v2.0/auth-admin-devguide/content/MFA_Ops.htmlmulti-factor authentication"
                      >multi-factor authentication</link>. To complete the authentication process,
                    submit a second <guilabel>POST tokens</guilabel> request with these multi-factor
                    authentication credentials: <itemizedlist>
                      <listitem>
                        <para>The session ID value returned in the <code>WWW-Authenticate: OS-MF
                            sessionId</code> header parameter that is included in the response to
                          the initial authentication request.</para>
                      </listitem>
                      <listitem>
                        <para>The passcode from the mobile phone associated with your user
                          account.</para>
                        <example>
                          <title>Authentication request with multi-factor authentication
                            credentials</title>
                          <programlisting language="bash" role="gutter: false"><?db-font-size 60%?><prompt>$</prompt>curl https://identity.api.rackspacecloud.com/v2.0/tokens \
     -X POST \
     -d '{"auth": {"RAX-AUTH:passcodeCredentials": {"passcode":"1411594"}}}'\
     -H "X-SessionId: $SESSION_ID" \
     -H "Content-Type: application/json" --verbose | python -m json.tool</programlisting>
                        </example>
                      </listitem>
                    </itemizedlist></para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>Use the authentication token to send a <command>GET</command> request to a service
              that you want to use. The following example shows passing an authentication token to
              the Rackspace CDN service by using the Rackspace CDN service catalog endpoint that was
              returned along with the token.</para>
            <example>
              <title>cURL GET request: JSON</title>
              <programlisting>curl -i -X GET https://global.cdn.api.rackspacecloud.com/v1.0/<emphasis role="bold">yourAccountID</emphasis>/ \
-H "X-Auth-Token: <emphasis role="bold">yourAuthToken</emphasis>" \
-H "Accept: application/json"\
-H "Content-type: application/json"</programlisting>
            </example>
          </listitem>
        </orderedlist>
      </para>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02">In this service management guide, <emphasis
          role="bold">yourAccountID</emphasis> is the SSO of the user.</para>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02">Authentication tokens are typically valid for
        24 hours. Applications should be designed to re-authenticate after receiving a 401
        (Unauthorized) response from a service endpoint. </para>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:wadl="http://wadl.dev.java.net/2009/02">If you are programmatically parsing an
        authentication response, be aware that service names are stable for the life of the
        particular service and can be used as keys. You should also be aware that a user's service
        catalog can include multiple uniquely named services that perform similar functions. In
        Cloud Identity 2.0, the service type attribute can be used as a key by which to recognize
        similar services. </para>
    </section>
    <section xml:id="RBAC" xmlns:wadl="http://wadl.dev.java.net/2009/02"
      xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml">
      <title>Role Based Access Control</title>
      <para>Role Based Access Control (RBAC) restricts access to the capabilities of Rackspace Cloud
        services, including the Rackspace CDN API, to authorized users only. RBAC enables Rackspace
        Cloud customers to specify which account users of their Cloud account have access to which
        Rackspace CDN API service capabilities, based on roles defined by Rackspace (see <xref
          linkend="RBAC_product_roles_table"/>). The permissions to perform certain operations in
        the Rackspace CDN API – create, read, update, delete – are assigned to specific roles, and
        the Cloud account admin user assigns these roles to account users. </para>
      <para>For more information about RBAC, see the <link
          xlink:href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/Role_Based_Access_Control-d1e808.html"
          >RBAC</link> section in the <citetitle>Cloud Identity Client Developer
        Guide</citetitle>.</para>
      <section xml:id="assigningRoles">
        <title>Assigning roles to account users</title>
        <para>The account owner (identity:user-admin) can create account users on the account and
          then assign roles to those users. The roles grant the account users specific permissions
          for accessing the capabilities of the Rackspace CDN service. Each account has only one
          account owner, and that role is assigned by default to any Rackspace Cloud account when
          the account is created.</para>
        <para>For information about how to perform the following tasks, see the <citetitle>Cloud
            Identity Client Developer Guide</citetitle>:</para>
        <itemizedlist spacing="compact">
          <listitem>
            <para><link
                xlink:href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/POST_addUser__v2.0_users_User_Calls.html"
                >Create account users</link></para>
          </listitem>
          <listitem>
            <para><link
                xlink:href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/PUT_addUserRole__v2.0_users__userId__roles_OS-KSADM__roleid__Role_Calls.html"
                >Assign roles to account users</link></para>
          </listitem>
          <listitem>
            <para><link
                xlink:href="http://docs.rackspace.com/auth/api/v2.0/auth-client-devguide/content/DELETE_deleteUserRole__v2.0_users__userId__roles_OS-KSADM__roleid__Role_Calls.html"
                >Delete roles from account users</link></para>
          </listitem>
        </itemizedlist>
        <note>
          <para>The account owner (identity:user-admin) role cannot hold any additional roles
            because it already has full access to all capabilities.</para>
        </note>
      </section>
      <section xml:id="rolesAvailable">
        <title>Roles available for Rackspace CDN </title>
        <para>Four roles (admin, creator, observer, and operator) can be used to access the
          Rackspace CDN API specifically. The following table describes these roles and their
          permissions. </para>
        <table rules="all" xml:id="RBAC_product_roles_table">
          <caption>Rackspace CDN product roles and permissions</caption>
          <col width="50%"/>
          <col width="50%"/>
          <thead>
            <tr>
              <th>Role name</th>
              <th>Role permissions</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>cdn:admin</td>
              <td>This role provides Create, Read, Update, and Delete permissions in Rackspace CDN,
                where access is granted.</td>
            </tr>
            <tr>
              <td>cdn:creator</td>
              <td>This role provides Create, Read, and Update permissions in Rackspace CDN, where
                access is granted.</td>
            </tr>
            <tr>
              <td>cdn:observer</td>
              <td>This role provides Read permission in Rackspace CDN, where access is granted.</td>
            </tr>
            <tr>
              <td>cdn:operator</td>
              <td>This role provides permissions to create and delete flavors. See <xref
                  linkend="flavorsOperations"/>. This role is specific to the Rackspace CDN service
                and is for internal service management.</td>
            </tr>
          </tbody>
        </table>
        <para>Additionally, two multiproduct roles apply to all products. Users with multiproduct
          roles inherit access to future products when those products become RBAC-enabled. The
          following table describes these roles and their permissions.</para>
        <table rules="all" width="100%" xml:id="RBAC_global_roles_table_3">
          <caption> Multiproduct (global) roles and permissions</caption>
          <thead>
            <tr>
              <td colspan="1">Role name</td>
              <td colspan="2">Role permissions</td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td colspan="1">admin</td>
              <td colspan="2">This role provides Create, Read, Update, and Delete permissions in all
                products, where access is granted.</td>
            </tr>
            <tr>
              <td colspan="1">observer</td>
              <td colspan="2">This role provides Read permission in all products, where access is
                granted.</td>
            </tr>
          </tbody>
        </table>
      </section>
      <section version="5.0" xml:id="RBAC_Role_Conflict_3">
        <title>Resolving conflicts between RBAC multiproduct and custom (product-specific)
          roles</title>
        <para>The account owner can set roles for both multiproduct and Rackspace CDN scope, and it
          is important to understand how any potential conflicts among these roles are resolved.
          When two roles appear to conflict, the role that provides the more extensive permissions
          takes precedence. Therefore, admin roles take precedence over observer and creator roles,
          because admin roles provide more permissions. </para>
        <para>The following table shows two examples of how potential conflicts between user roles
          in the Control Panel are resolved: </para>
        <para>
          <informaltable rules="all">
            <thead>
              <tr align="center">
                <td>Permission configuration</td>
                <td>View of permission in the Control Panel </td>
                <td>Can the user perform product admin functions in the Control Panel?</td>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>User is assigned the following roles: multiproduct <emphasis role="bold"
                    >observer</emphasis> and Rackspace CDN <emphasis role="bold"
                  >admin</emphasis></td>
                <td>Appears that the user has only the multiproduct <emphasis role="bold"
                    >observer</emphasis> role</td>
                <td>Yes, for Rackspace CDN only. The user has the <emphasis role="bold"
                    >observer</emphasis> role for the rest of the products.</td>
              </tr>
              <tr>
                <td>User is assigned the following roles: multiproduct <emphasis role="bold"
                    >admin</emphasis> and Rackspace CDN <emphasis role="bold"
                  >observer</emphasis></td>
                <td>Appears that the user has only the multiproduct <emphasis role="bold"
                    >admin</emphasis> role</td>
                <td>Yes, for all of the products. The Rackspace CDN <emphasis role="bold"
                    >observer</emphasis> role is ignored.</td>
              </tr>
            </tbody>
          </informaltable>
        </para>
      </section>
      <section version="5.0" xml:id="RBAC_API_XREF_3">
        <title>RBAC permissions cross-reference to Rackspace CDN API operations</title>
        <remark>Make sure the Rackspace CDN is added to the KC article. Renee Rendon is the
          responsible writer for that.</remark>
        <para>API operations for Rackspace CDN may or may not be available to all roles. To see
          which operations are permitted to invoke which calls, see the <link
            xlink:href="http://www.rackspace.com/knowledge_center/article/permissions-matrix-for-role-based-access-control-rbac"
            >Permissions Matrix</link> article in the Rackspace Knowledge Center.</para>
      </section>
    </section>
    <section xml:id="serviceEndpoints" xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml">
      <title>Service access endpoint</title>
      <para>Rackspace CDN has a global endpoint. Data is replicated to all data centers. The global
        endpoint is as follows:</para>
      <programlisting>https://global.cdn.api.rackspacecloud.com/v1.0/<parameter>123456</parameter></programlisting>
      <para>Replace the sample account ID number, <parameter>123456</parameter>, with your actual
        account ID returned as part of the authentication service response.</para>
      <para>Your account ID is located after the final slash (/) in the <code>publicURL</code> field
        returned by the authentication response. For example, in the <code>publicURL</code> field
        for <code>rackCDN</code> is
          <code>https://global.cdn.api.rackspacecloud.com/v1.0/110011</code> and the account ID is
          <emphasis role="bold">110011</emphasis>. </para>
      <note>
        <para>The account ID from Cloud Identity is the same as the project ID given in the
            <code>X-Project-Id</code> header in Rackspace CDN. (You might also see account ID or
          project ID referred to as tenant ID.)</para>
      </note>
    </section>
    <section xml:id="contractVersion" xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml">
      <title>Rackspace CDN contract version</title>
      <para> The Rackspace CDN version defines the contract and build information for the API. </para>
      <para> The contract version denotes the data model and behavior that the API supports. The
        requested contract version is included in all request URLs. Different contract versions of
        the API might be available at any given time and are not guaranteed to be compatible with
        one another. </para>
      <example>
        <title>Example request URL (contract version in <emphasis role="strong"
          >bold</emphasis>)</title>
        <programlisting>https://global.cdn.api.rackspacecloud.com/<emphasis role="bold">v1.0</emphasis>/<parameter>123456</parameter></programlisting>
      </example>
      <note>
        <para>This document pertains to contract version 1.0.</para>
      </note>
    </section>
    <section xml:id="Request_Response_Types-d1e903" xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml">
      <title>Request and response types</title>
      <para>The Rackspace CDN API supports JSON data serialization formats. </para>
      <para>Specify the request format by using the <code>Content-Type</code> header, which is
          <emphasis role="italic">required</emphasis> for operations that have a request body. </para>
      <para>You can specify the response format in requests by using the <code>Accept</code> header
        or by adding a <code>.json</code> extension to the request URI. If no response format is
        specified, JSON is the default. </para>
      <table rules="all">
        <caption>Response format</caption>
        <?dbfo keep-together="always"?>
        <thead>
          <tr align="center">
            <td>Format</td>
            <td>Accept header</td>
            <td>Query extension</td>
            <td>Default</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>JSON</td>
            <td>application/json</td>
            <td>.json</td>
            <td>Yes</td>
          </tr>
        </tbody>
      </table>
    </section>
 <!-- 
    <remark>No rate limits for EA - only the 1 absolute limit. </remark>
    <section xml:id="Limits-d1e1397" xmlns:m="http://www.w3.org/1998/Math/MathML"
      xmlns:html="http://www.w3.org/1999/xhtml">
      <title>Limits</title>
      <remark>Are there any limits that should be documented?</remark>
      <para>All accounts are configured with default thresholds, or limits, that manage capacity and
        prevent abuse of the system. </para>
      <para>The system recognizes the following types of limits: </para>
      <itemizedlist>
        <listitem>
          <para>rate limits</para>
          <para>Rate limits are thresholds that are reset after a certain amount of time passes.
            Rate limits control the frequency at which the user can issue specific API requests. For
            more information, see <xref linkend="Rate-Limits-d1e003"/>.</para>
        </listitem>
        <listitem>
          <para>absolute limits</para>
          <para>Absolute limits are fixed. Absolute limits control the total number of specific
            objects that the user can possess simultaneously. For more information, see <xref
              linkend="Absolute-Limits-d1e003"/>.</para>
        </listitem>
      </itemizedlist>
      <note>
        <para>If the default limits are too low for your particular application, please contact
          Rackspace Cloud support to request an increase. All requests require reasonable
          justification.</para>
      </note>
      <section xml:id="Rate-Limits-d1e003">
        <title>Rate limits</title>
        <remark>Are there any rate limits that should be documented?</remark>
        <para>Rate limits control the frequency at which the user can issue specific API
          requests.</para>
        <para>For Rackspace CDN, the rate limit is ???? (Megan added "invalidation vs delete purges"
          in her review of this section). </para>
        <para>Rate limits are reset after a certain amount of time passes. </para>
      </section>
-->      
      <section xml:id="Absolute-Limits-d1e003">
        <title>Absolute limits</title>
      <remark>Are there any absolute limits that should be documented?</remark>
      <para>The following table provides details about the absolute limits for the Rackspace CDN
        API.</para>
      <table rules="all">
        <caption>Absolute limits</caption>
        <col width="30%"/>
        <col width="40%"/>
        <col width="30%"/>
        <thead>
          <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Limit</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Client maximum body size restriction</td>
            <td>Maximum size of request body. Exceeding the limit results in a 413 (<code>Request
                Entity Too Large</code>) error.</td>
            <td>8 KB</td>
          </tr>
        </tbody>
      </table>
      </section>
    <section xml:id="commonHeaders">
      <title>Common headers</title>
      <para>The following table describes the common headers used by the API.</para>
      <table rules="all">
        <caption>Common headers</caption>
        <col width="30%"/>
        <col width="70%"/>
        <thead>
          <tr>
            <th>Header</th>
            <th>Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>X-Auth-Token</td>
            <td>Authentication token. Required.</td>
          </tr>
          <tr>
            <td>X-Project-Id</td>
            <td>A unique ID for the user to which the value of <code>X-Auth-Token</code> grants
              access. The unique ID is your account ID.</td>
          </tr>
          <tr>
            <td>Accept</td>
            <td>Media type. Initially, only <code>application/json</code> is supported. </td>
          </tr>
          <tr>
            <td>Accept-Encoding</td>
            <td>Specifies that the agent accepts gzip-encoded response bodies</td>
          </tr>
          <tr>
            <td>Client-ID</td>
            <td>A unique ID for each client instance. The <code>Client-ID</code> is used to avoid
              echoing a sender's messages back to the same instance, and it can be logged by the
              server for future use. The client generates the <code>Client-ID</code> once, and it
              persists between restarts of the client. The client should reuse the same
                <code>Client-ID</code>. <emphasis role="bold">Note</emphasis>: All message-related
              operations require that <code>Client-ID</code> is included in the headers to ensure
              that messages are not echoed back to the client that posted them, unless the client
              explicitly requests this.</td>
          </tr>
          <tr>
            <td>Content-Length</td>
            <td>For <command>POST</command> or <command>PUT</command> requests, the length in bytes
              of the message document being submitted</td>
          </tr>
          <tr>
            <td>Content-Type</td>
            <td><code>application/json</code>
            </td>
          </tr>
          <tr>
            <td>Date</td>
            <td>Current date and time</td>
          </tr>
          <tr>
            <td>Host</td>
            <td>Host name of the API</td>
          </tr>
        </tbody>
      </table>
    </section>
    <section xml:id="datetimeformat">
      <title>Date and time format</title>
      <para>The Rackspace CDN service uses an ISO-8601 compliant date format for the display and
        consumption of date/time values. </para>
      <example>
        <title>Service date/time format</title>
        <programlisting>yyyy-MM-dd'T'HH:mm:ss.SSSZ</programlisting>
        <para>See the table below for a description of the date and time format codes.</para>
        <para>September 19th, 2014 at 8:07:08 AM, GMT-5 would have the following format:</para>
        <programlisting>2014-09-19T08:07:08-05:00</programlisting>
      </example>
      <table rules="all">
        <caption>Explanation of date/time format codes</caption>
        <thead>
          <tr>
            <td>Code</td>
            <td>Description</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>yyyy</td>
            <td>Four-digit year</td>
          </tr>
          <tr>
            <td>MM</td>
            <td>Two-digit month</td>
          </tr>
          <tr>
            <td>dd</td>
            <td>Two-digit day of the month</td>
          </tr>
          <tr>
            <td>T</td>
            <td>Separator for the date and time</td>
          </tr>
          <tr>
            <td>HH</td>
            <td>Two-digit hour of the day (00-23)</td>
          </tr>
          <tr>
            <td>mm</td>
            <td>Two-digit minutes of the hour</td>
          </tr>
          <tr>
            <td>ss</td>
            <td>Two-digit seconds of the minute</td>
          </tr>
          <tr>
            <td>SSS</td>
            <td>Three-digit milliseconds of the second</td>
          </tr>
          <tr>
            <td>Z</td>
            <td>RFC-822 timezone</td>
          </tr>
        </tbody>
      </table>
    </section>
    <section xml:id="pagination-dle101">
      <title>Pagination</title>
      <remark>???? Do we need a pagination section for Rackspace CDN?</remark>
      <para xmlns:wadl="http://wadl.dev.java.net/2009/02">Pagination provides the ability to limit
        the size of the returned data in the response body as well as retrieve a specified subset of
        a large data set. Pagination has two key concepts: <emphasis>limit</emphasis> and
          <emphasis>marker</emphasis>. </para>
      <para xmlns:wadl="http://wadl.dev.java.net/2009/02">
        <itemizedlist>
          <listitem>
            <para><code>limit</code> is the restriction on the maximum number of items that can be
              returned. </para>
          </listitem>
          <listitem>
            <para><code>marker</code> is the last item in the previous list returned. This is the
              generated <code>service_ID</code>.</para>
            <para>For example, a query could request the next 10 services after the service “xyz” as
              follows: <code>?limit=10&amp;marker=xyz</code>. </para>
          </listitem>
        </itemizedlist>
      </para>
      <para xmlns:wadl="http://wadl.dev.java.net/2009/02">Pagination applies only to the operations
        listed in the following table:</para>
      <informaltable rules="all" xmlns:wadl="http://wadl.dev.java.net/2009/02">
        <thead>
          <tr align="center">
            <td colspan="1">Verb</td>
            <td colspan="2">URI</td>
            <td colspan="3">Description</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td colspan="1">&GET;</td>
            <td colspan="2">/v1.0/services </td>
            <td colspan="3">Retrieves a list of all services.</td>
          </tr>
        </tbody>
      </informaltable>
      <para>For an example, see the <link
          xlink:href="http://docs.rackspace.com/cdn/api/v1.0/cdn-devguide/content/GET_getAllServices__services_servicesOperations.html"
          xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
          >"List all services" operation description</link> in the <citetitle>Rackspace CDN
          Developer Guide</citetitle>. </para>
    </section>
    <section xml:id="responseCodes-d101e">
      <title>Response codes</title>
      <para>Rackspace CDN returns an HTTP code that denotes the type of response. </para>
      <itemizedlist>
        <listitem>
          <para>Successful response codes are returned only if all configured providers were
            successful in processing the request.</para>
        </listitem>
        <listitem>
          <para>Error response codes are accompanied by an <code>application/json</code> response
            body that contains the error messages.</para>
        </listitem>
      </itemizedlist>
      <para>The following table lists possible responses with their associated codes and
        descriptions.</para>
      <informaltable rules="all">
        <thead>
          <tr align="center">
            <td colspan="2">Response</td>
            <td colspan="1">Associated response code</td>
            <td colspan="3">Description</td>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td colspan="2"><code>OK</code></td>
            <td colspan="1">200</td>
            <td colspan="3">The request has succeeded. (Some API calls might return 201
              instead.)</td>
          </tr>
          <tr>
            <td colspan="2"><code>Created</code></td>
            <td colspan="1">201</td>
            <td colspan="3">The request has been fulfilled and a resource was created.</td>
          </tr>
          <tr>
            <td colspan="2"><code>Accepted</code></td>
            <td colspan="1">202</td>
            <td colspan="3">The request has been accepted for processing.</td>
          </tr>
          <tr>
            <td colspan="2"><code>No Content</code></td>
            <td colspan="1">204</td>
            <td colspan="3">The request has been fulfilled but does not return a representation
              (that is, the response is empty).</td>
          </tr>
          <tr>
            <td colspan="2"><code>Bad Request</code></td>
            <td colspan="1">400</td>
            <td colspan="3">The request was not understood or was missing required parameters. </td>
          </tr>
          <tr>
            <td colspan="2"><code>Unauthorized</code></td>
            <td colspan="1">401</td>
            <td colspan="3">Authentication failed, or the user does not have permissions for a
              requested operation.</td>
          </tr>
          <tr>
            <td colspan="2"><code>Forbidden</code></td>
            <td colspan="1">403</td>
            <td colspan="3">The server understood the request but refused to fulfill it.</td>
          </tr>
          <tr>
            <td colspan="2"><code>Not Found</code></td>
            <td colspan="1">404</td>
            <td colspan="3">A requested resource was not found.</td>
          </tr>
          <tr>
            <td colspan="2"><code>Method Not Allowed</code></td>
            <td colspan="1">405</td>
            <td colspan="3">The request method is not supported for this resource.</td>
          </tr>
          <tr>
            <td colspan="2"><code>Method Not Allowed</code></td>
            <td colspan="1">413</td>
            <td colspan="3">The server is refusing to process a request because the request entity
              is larger than the server is willing or able to process. </td>
          </tr>
          <tr>
            <td colspan="2"><code>Too Many Requests</code></td>
            <td colspan="1">429</td>
            <td colspan="3">Too many requests have been sent in a given amount of time. Pause
              requests, wait up to one minute, and try again. (Intended for use with rate
              limiting.)</td>
          </tr>
          <tr>
            <td colspan="2"><code>Internal Server Error</code></td>
            <td colspan="1">500</td>
            <td colspan="3">The service encountered an unexpected condition that prevented it from
              fulfilling the request.</td>
          </tr>
          <tr>
            <td colspan="2"><code>Service Unavailable</code></td>
            <td colspan="1">503</td>
            <td colspan="3">The service is currently unable to handle the request due to a temporary
              overloading or maintenance. This is a temporary condition. Try again later.</td>
          </tr>
        </tbody>

      </informaltable>
      <para xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:html="http://www.w3.org/1999/xhtml"
        ><?rax-fo keep-with-next?> An example of an error message follows. </para>
      <example xmlns:m="http://www.w3.org/1998/Math/MathML"
        xmlns:html="http://www.w3.org/1999/xhtml">
        <title>Error message example</title>
        <programlisting>HTTP/1.1 400 Bad Request
Content-Type: application/json

{
  "title": "Unsupported limit",
  "description": "The given limit cannot be negative, and cannot be greater than 50.",
  "code": 1092,
  "link": {
    "rel": "help",
    "href": "http://docs.example.com/messages#limit",
    "text": "API documentation for the limit parameter"
  }
}</programlisting>
      </example>
    </section>
  </chapter>
  <chapter xml:id="apiOperations-d101" xmlns="http://docbook.org/ns/docbook" role="api-reference">
    <title>API operations</title>
    <para>This chapter describes each of the Rackspace CDN service management operations, which are
      summarized in the following table. </para>
    <section xml:id="baseOperations">
      <title>Base operations</title>
      <para>The section describes base operations for Rackspace CDN, such the operations to get the
        home document, to get a health check, and to ping.</para>
      <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
        <wadl:resource href="../../src/wadl/cdn-adminguide.wadl#health">
          <wadl:method href="#getHealthCheck"/>
        </wadl:resource>
        <wadl:resource href="../../src/wadl/cdn-adminguide.wadl#subsystem">
          <wadl:method href="#getHealthDetails"/>
        </wadl:resource>
      </wadl:resources>
    </section>
    <section xml:id="flavorsOperations">
      <title>Flavors</title>
      <para>A flavor is a mapping configuration to a CDN provider. Each flavor may contain a list of
        providers. The operator can decide the flavor names offered and the mapping to each provider
        offered. </para>
      <para>The section describes operations related to flavors.</para>
      <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
        <wadl:resource href="../../src/wadl/cdn-adminguide.wadl#flavors">
          <wadl:method href="#postFlavors"/>
        </wadl:resource>
        <wadl:resource href="../../src/wadl/cdn-adminguide.wadl#flavor_id">
          <wadl:method href="#deleteFlavor"/>
        </wadl:resource>
      </wadl:resources>
    </section>
  </chapter>
  <glossary xml:id="glossary-d1e018" xmlns:m="http://www.w3.org/1998/Math/MathML"
    xmlns:html="http://www.w3.org/1999/xhtml">
    <title>Glossary</title>
    <glossentry xml:id="claim-d1e017">
      <glossterm>Caching rule</glossterm>
      <glossdef>
        <para>A caching rule provides you with fine-grained control over the time-to-live (TTL) of
          an object. When the TTL expires for an object, the edge node pulls the object from the
          origin again.</para>
      </glossdef>
    </glossentry>
    <glossentry>
      <glossterm>Content delivery network</glossterm>
      <glossdef>
        <para>A content delivery network (CDN) is a system of multiple computers that contains
          copies of data stored at various network nodes. A CDN is designed to improve performance
          of publicly distributed assets. Assets can be anything from website content, to web
          application components, to media such as videos, ads, and interactive experiences.  CDNs
          decrease the load time of these assets by caching them on edge nodes, also called edge
          servers or point of presence (PoPs) servers.  Edge nodes are distributed around the globe,
          so requests travel to a local location to get assets rather than to and from a data center
          based far from the end user. </para>
      </glossdef>
    </glossentry>
    <glossentry>
      <glossterm>Domain</glossterm>
      <glossdef>
        <para>A domain represents the domain name through which visitors retrieve content. The
          underlying site might be served through a CDN. A service can have multiple domains. The
          CDN provider provides users with a Canonical Name (CName) to specify for their domain name
          as an alias.</para>
      </glossdef>
    </glossentry>
    <glossentry xml:id="message-d1e016">
      <glossterm>Edge node</glossterm>
      <glossdef>
        <para>CDN providers have many points of presence (PoP) servers around the world. These
          servers are known as edge nodes. These edge nodes cache the content and serve it directly
          to customers, thus reducing transit time to a customer's location.</para>
      </glossdef>
    </glossentry>
    <glossentry>
      <glossterm>Edge server</glossterm>
      <glossdef>
        <para>An edge server is the same as an edge node. </para>
      </glossdef>
    </glossentry>
    <glossentry>
      <glossterm>Flavor </glossterm>
      <glossdef>
        <para>A flavor is a mapping configuration to a CDN provider that enables you to decide which
          CDN features that you want your service to use. In the request and response examples for
          Rackspace CDN, the flavor is referred to with the <code>flavor_id</code> parameter. For
          this release of Rackspace CDN, the <code>flavor_id</code> value is <code>cdn</code>. The
            <code>cdn</code> flavor enables your service content to be delivered across the network
          using the Rackspace CDN partner, Akamai. In the future, Rackspace might offer other
          flavors.</para>
      </glossdef>
    </glossentry>
    <glossentry>
      <glossterm>Origin</glossterm>
      <glossdef>
        <para>An origin is an address (IP or domain) from which the CDN provider pulls content. A
          service can have multiple origins.</para>
      </glossdef>
    </glossentry>
    <glossentry>
      <glossterm>Point of presence</glossterm>
      <glossdef>
        <para>A point of presence (PoP) is the point at which two or more different networks or
          communication devices build a connection with each other. PoP mainly refers to an access
          point, location, or facility that connects to and helps other devices establish a
          connection with the Internet. </para>
      </glossdef>
    </glossentry>
    <glossentry>
      <glossterm>Purge</glossterm>
      <glossdef>
        <para>Purging removes content from the edge nodes thus invalidating the content so that the
          content can be refreshed from your origin servers.</para>
      </glossdef>
    </glossentry>
    <glossentry xml:id="queue-d1e019">
      <glossterm>Restriction</glossterm>
      <glossdef>
        <para>A restriction enables you to define rules about who can or cannot access content from
          the cache. Examples of a restriction are allowing requests only from certain domains,
          geographies, or IP addresses.</para>
      </glossdef>
    </glossentry>
    <glossentry xml:id="subscriber-d1e018">
      <glossterm>Service</glossterm>
      <glossdef>
        <para>A service represents an application that has its content cached to the edge
          nodes.</para>
      </glossdef>
    </glossentry>
    <glossentry>
      <glossterm>Status</glossterm>
      <glossdef>
        <para>The status indicates the current state of a service. The time it takes for a service
          configuration to be distributed to a CDN provider cache can vary. </para>
      </glossdef>
    </glossentry>
  </glossary>
</book>
